@model AccountInputViewModel

<p class="content">
    <h1 class="title has-text-centered">Редагування аккаунту</h1>
</p>

<section class="section" id="createAccountPage">
    <div class="container">
        @using (Html.BeginForm(Model.IsCreateModel ? "Create" : "Edit", "Account", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", enctype = "multipart/form-data", autocomplete = "false" }))
        {
            @Html.HiddenFor(x => x.Id)
            @Html.AntiForgeryToken()
            <div class="columns">
                <div class="column is-10">
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            @Html.TextBoxFor(x => x.Name, htmlAttributes: new { @class = "input" })
                            @Html.ValidationMessageFor(x => x.Name)
                        </div>
                    </div>
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            @Html.TextBoxFor(x => x.Email, htmlAttributes: new { @class = "input", @type="email" })
                            @Html.ValidationMessageFor(x => x.Email)
                        </div>
                    </div>
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.PhoneNumber, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            @Html.TextBoxFor(x => x.PhoneNumber, htmlAttributes: new { @class = "input" })
                            @Html.ValidationMessageFor(x => x.PhoneNumber)
                        </div>
                    </div>
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.SocialNetworkLink, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            @Html.TextBoxFor(x => x.SocialNetworkLink, htmlAttributes: new { @class = "input" })
                            @Html.ValidationMessageFor(x => x.SocialNetworkLink)
                        </div>
                    </div>
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.Password, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            @Html.TextBoxFor(x => x.Password, htmlAttributes: new { @class = "input", @type="password" })
                            @Html.ValidationMessageFor(x => x.Password)
                        </div>
                    </div>
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.TeamId, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            <span class="select">
                                @Html.DropDownListFor(x => x.TeamId, Model.AllTeamsSelectList)
                            </span>
                            @Html.ValidationMessageFor(x => x.TeamId)
                        </div>
                    </div>
                    <div class="control is-horizontal">
                        <div class="control-label">
                            @Html.LabelFor(x => x.Image, htmlAttributes: new { @class = "label" })
                        </div>
                        <div class="control">
                            @Html.TextBoxFor(x => x.Image, htmlAttributes: new { @type = "file" })
                            @Html.ValidationMessageFor(x => x.Image)
                        </div>
                    </div>
                </div>
                <div class="column">
                    <p class="control">
                        <button class="button is-success is-large" type="submit">Зберегти</button>
                    </p>
                    <p class="control">
                        <a href="@Url.Action("Index")" class="button is-warning is-large">Відмініти</a>
                    </p>
                </div>
            </div>
        }
    </div>
    <div class="container">
        @if (Model.IsMediaContentPresent)
        {
            @Html.Partial("_MediaContent", Model.Id)
            @Html.Action("Media", new { entityId = Model.Id })
        }
    </div>
</section>


